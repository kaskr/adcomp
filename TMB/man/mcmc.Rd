% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/mcmc.R
\name{mcmc}
\alias{mcmc}
\title{MCMC sampling of TMB models}
\usage{
mcmc(obj, nsim, algorithm, params.init = NULL, diagnostic = FALSE, ...)
}
\arguments{
\item{obj}{A TMB model object.}

\item{nsim}{The number of (dependent) samples to draw.}

\item{algorithm}{A string specifiying an algorithm. Currently supported
are "HMC" for Hamiltonian sampler and "NUTS" for the No-U-Turn
sampler.}

\item{params.init}{The initial parameter vector. The default of NULL
signifies to use the starting values present in the model
(i.e., \code{obj$par}).}

\item{diagnostic}{Whether to return diagnostic information about
chain. See individual algorithm for more information.}

\item{...}{Further arguments to be passed to the algorithm. See help
files for the samplers for further arguments.}
}
\description{
[BETA VERSION] Draw samples from the posterior of a TMB model using a
specified MCMC algorithm.
}
\details{
The user is responsible for specifying the model properly
(priors, starting values, desired parameters fixed, etc.).
}
\examples{
require(TMB)

## Draw samples with the HMC and NUTS algorithms and compare.

## Run the simple example, obj and opt are loaded into workspace
runExample("simple")
obj$env$beSilent()
## A helper function to get an approximate epsilon.
find.epsilon(theta=opt$par, fn=function(x) -obj$fn(x), gr=function(x) -obj$gr(x))
## Run two gradient based algorithms
system.time(simple.hmc <-
    mcmc(obj=obj, nsim=1000, algorithm='HMC', L=5, eps=.1, params.init=opt$par))
system.time(simple.nuts <-
    mcmc(obj=obj, nsim=1000, algorithm='NUTS', eps=.1, params.init=opt$par))
## See how they compare
par(mfrow=c(2,4))
for(i in 1:4) acf(simple.hmc[,i])
for(i in 1:4) acf(simple.nuts[,i])

rm(list=c('obj', 'opt', 'simple.hmc', 'simple.nuts'))
}
\author{
Cole Monnahan
}

