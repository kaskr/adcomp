% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/mcmc.R
\name{find.epsilon}
\alias{find.epsilon}
\title{Estimate step size for Hamiltonian MCMC algorithms}
\usage{
find.epsilon(theta, fn, gr, eps = 1)
}
\arguments{
\item{theta}{An initial parameter vector.}

\item{fn}{A function returning the log-likelihood (not the negative of
it) for a given parameter vector.}

\item{gr}{A function returning the gradient of the log-likelihood of a
model.}

\item{eps}{A value for espilon to initiate the algorithm. Defaults to
1. If this is far too big the algorithm won't work well and an
alternative value can be used.}
}
\value{
Returns the "reasonable" espilon invisible, while printing how
many steps to reach it.
}
\description{
Estimate a reasonable starting value for epsilon (step size) for a given
model, for use with Hamiltonian MCMC algorithms.
}
\details{
This is Algorithm 4 from Hoffman and Gelman (2010) and is used in the
dual-averaging algorithms for both HMC and NUTS to find a reasonable
starting value.

The algorithm uses a while loop and will break after 50
iterations.
}

