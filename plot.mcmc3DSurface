plot.mcmc3DSurface <- function(mcmcOut, Plots = c("Plot3d", "Image", "Contour", "Persp3d"), Pairs = F, Obj. = obj, Opt. = opt, Names = NULL, 
             varX = 1, varY = 2, zLab = "Neg. Log-likelihood", nx = 50, ny = 50, colPersp = NULL, addMf = FALSE, sharedMousePairs = T, alpha = 0.75, Plot = TRUE, ...) {

    require(rgl)

    bar <- function(i, n, size = 60, char = ">", prefix = ifelse(.Platform$OS.type == "windows", memory.size(), i)) {
        num <- round((size * i)/n)
        cat(prefix, " |", paste(rep(char, num), collapse = ""), paste(rep(" ", size - num), collapse = ""),
                "|\r", sep = "")
        flush.console()
        if(i == n) 
          cat("\n\r")  # "Fixes leaving the cursor toward the right
    }

    mfrow.skip <- function() {
         Cur <- par()$mfg
         if(Cur[2] < Cur[4])
         Cur[2] <- Cur[2] + 1
         else {
            Cur[2] <- 1
            Cur[1] <- Cur[1] + 1
         }
         par(mfg = Cur)
     }
       
# ---------------------------------------------------------------------------------------------------------------------------


   if(any(names(mcmcOut) == "parThin"))
      Par <- mcmcOut$parThin
   else    
      Par <- mcmcOut$par
    
   if(is.null(Names))
     Names <- names(Par) 

   if(!any("obj" == names(Par))) {

       Par$obj <- NA
       for ( i in 1:nrow(Par)) {
         bar(i, nrow(Par))
         Par$obj[i] <- nlminb(Par[i, 1:(ncol(Par) - 1)], Obj.$fn, Obj.$gr, control = list(step.min = 0.001, eval.max = 1, iter.max =1))$objective  # Perhaps overkill on the control parameters
       }   
   }

   if(any(names(mcmcOut) == "parThin"))
          mcmcOut$parThin <- Par
      else
          mcmcOut$par <- Par

   if(Plot) {
      if(!Pairs) {

         if(is.null(colPersp))
             colPersp <- "green"

         if(any("Plot3d" == Plots)) {
             if(!addMf)
                 open3d()
             plot3d(Par[,varX], Par[,varY], Par$obj, xlab = Names[varX], ylab = Names[varY], zlab=zLab)
         }

         if(any("Image" == Plots) | any("Contour" == Plots) | any("Persp3d" == Plots)) {
             require(akima) 
             mcmcOut$s <- interp(Par[,varX], Par[,varY], Par$obj, nx = nx, ny = ny, duplicate="mean")
             names(mcmcOut$s) <- c(Names[c(varX, varY)], "obj")
         }

   
         if(any("Contour" == Plots)) {
             if(.Platform$OS.type == "windows" & !addMf)  windows()
             contour(mcmcOut$s[[1]], mcmcOut$s[[2]], mcmcOut$s$obj, xlab = Names[varX], ylab = Names[varY])
             abline(v=Opt.$par[varX], h=Opt.$par[varY], lty=2)
         }
 
         if(any("Image" == Plots)) {
             if(.Platform$OS.type == "windows" & !addMf)  windows()
             image(mcmcOut$s[[1]], mcmcOut$s[[2]], mcmcOut$s$obj, xlab = Names[varX], ylab = Names[varY])
             abline(v=Opt.$par[varX], h=Opt.$par[varY], lty=2)
         }

         if(any("Persp3d" == Plots)) {
            if(!addMf)
               open3d()
            persp3d(mcmcOut$s[[1]], mcmcOut$s[[2]], mcmcOut$s$obj, xlab = Names[varX], ylab = Names[varY], zlab=zLab, col = colPersp, alpha = alpha, ...)
         }

      } else {
 
         N <- ncol(Par) - 1
         if(any("Plot3d" == Plots) | any("Persp3d" == Plots)) {
            open3d()
            mfrow3d(N - 1, N - 1, sharedMouse = sharedMousePairs)
         } else 
            par(mfrow = c(N - 1, N - 1))

         if(is.null(colPersp))
              colPersp <- rainbow(sum(1:(N-1)))
         else
              colPersp <- rep(colPersp, len=sum(1:(N-1)))
      
         for (i in 1:(N-1)) {

            if( i > 1) {
              if(any("Plot3d" == Plots) | any("Persp3d" == Plots))
                    next3d(reuse=F)
              else
                    mfrow.skip()
              for (j in 1:(i - 1)) {
                if(any("Plot3d" == Plots) | any("Persp3d" == Plots))
                    next3d(reuse=F)
                else
                    mfrow.skip()
              }
            }

            k <- 0
            for(j in (i + 1):N) {
               k <- k + 1
               mcmc.3D.surface(mcmcOut, Plots, Pairs = FALSE, varX = i, varY = j, addMf = T, colPersp = colPersp[k], alpha = alpha, ...) 
            }
         }
      }
   }

   invisible(mcmcOut)

}


